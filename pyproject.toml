[project]
name = "vlm-layer-wise-analysis"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "torch>=2.0.0",
    "transformers>=4.45.0",
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0",
    "pandas>=2.0.0",
    "pillow>=10.0.0",
    "matplotlib>=3.7.0",
    "hydra-core>=1.3.0",
    "omegaconf>=2.3.0",
    "pydantic>=2.0.0",
    "tqdm>=4.65.0",
    "accelerate>=0.25.0",
    "bitsandbytes>=0.41.0",
    "datasets>=4.2.0",
]

[dependency-groups]
dev = [
    "mypy>=1.18.2",
    "ruff>=0.13.2",
]

[tool.ruff]
line-length = 140
exclude = ["__pycache__", ".git", ".mypy_cache", ".venv"]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    # custome ignore
    "FA102", # future-required-type-annotation
    "PERF203", # try-except-in-loop
    "C901", # too-complex
    "PLR0912", # use-enumerate
    "PLR0915", # use-f-string

    # default ignore
    "PTH",
    "D",
    "T201",   # print書かない
    "ISC001",
    "RUF002", # ambiguous-unicode-character-docstring
    "RUF003", # ambiguous-unicode-character-comment
    "RET504", # unnecessary-assign
    "INP001", # __init__.pyなし
    "ERA001", # commented-out-code
    "ANN401", # any-type
    "FIX002", # line-contains-todo
    "TD002",  # missing-todo-author
    "TD003",  # missing-todo-link
    "FBT001", # Boolean-typed positional argument in function definition
    "FBT002", # Boolean default positional argument in function definition
    "BLE001", # Do not catch blind exception: `Exception`
    "TRY201", # Use `raise` without specifying exception name
    "PYI034", # 非自己復帰型 Self
    "COM812",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "S101",    # assertを許す
    "PLR2004", # magic-value-comparison
    "TC001",   # typing-only-first-party-import
    "PT011",   # pytest-raises-too-broad
    "SLF001",  # Private member accessed
]

[tool.ruff.lint.isort]
combine-as-imports = true
force-sort-within-sections = true
force-wrap-aliases = true

[tool.mypy]
exclude = "^tests"
disable_error_code = [
    "no-any-return",  # Any型を返しているエラー
    "unused-ignore"  # 使っていないignore
]
ignore_missing_imports = true
# follow_imports = normal
disallow_any_unimported = false
disallow_any_expr = false       # 式でのAny禁止
disallow_any_decorated = false
disallow_any_explicit = false   # 変数でAny禁止
disallow_any_generics = false   # ジェネリックで書かないの禁止
disallow_subclassing_any = false  # Anyのサブクラス禁止  # 緩めた

disallow_untyped_calls = true      # 型なし関数呼び出し禁止 `a: int = f()`
disallow_untyped_defs = true       # 型なし関数定義禁止 `def f(a: int) -> int`
disallow_incomplete_defs = true    # 一部の型定義を禁止 `def f(a: int, b)`
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true

warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true     # 辿りつかないコードの検出
allow_redefinition = true   # 変数の再定義を禁止

show_error_context = true
show_column_numbers = true


[tool.basedpyright]
typeCheckingMode = "basic"
extraPaths = [".venv/lib64/python3.12/site-packages"]
reportAny = "none"
reportUnusedCallResult = "none"
reportMissingTypeStubs = "none"
reportUnknownArgumentType = "none"
reportUnknownMemberType = "none"
reportUnknownVariableType = "none"
reportRedeclaration = "none"
reportAttributeAccessIssue = "none"